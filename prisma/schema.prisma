generator client {
  provider = "prisma-client-js"
}
enum Role {
  ADMIN
  COMPTABLE
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id           Int            @id @default(autoincrement())
  nom          String         @db.VarChar(50)
  role         Role           @default(COMPTABLE)
  mot_de_passe String         @db.Text
  email        String         @unique @db.VarChar(100)
  statut       Boolean        @default(true)
  Client       Client[]
  Facture      Facture[]
  ModePaiement ModePaiement[]
  Paiement     Paiement[]
}

model ModePaiement {
  id             Int         @id @default(autoincrement())
  libelle        String      @unique @db.VarChar(50)
  id_utilisateur Int
  utilisateur    Utilisateur @relation(fields: [id_utilisateur], references: [id], onDelete: Cascade)
  Paiement       Paiement[]
}

model Client {
  id             Int         @id @default(autoincrement())
  nom            String      @db.VarChar(50)
  prenom         String      @db.VarChar(50)
  email          String      @unique @db.VarChar(100)
  telephone      String      @unique @db.VarChar(12)
  adresse        String      @db.VarChar(50)
  id_utilisateur Int
  utilisateur    Utilisateur @relation(fields: [id_utilisateur], references: [id], onDelete: Cascade)
  Facture        Facture[]
}

model Facture {
  id                   Int            @id @default(autoincrement())
  date_emission        DateTime
  date_echeance        DateTime
  montant              Decimal        @db.Decimal(15, 2)
  pourcentage_paiement Int
  statut               String         @default("active")
  id_utilisateur       Int
  id_client            Int
  client               Client         @relation(fields: [id_client], references: [id], onDelete: Cascade)
  utilisateur          Utilisateur    @relation(fields: [id_utilisateur], references: [id], onDelete: Cascade)
  LigneFacture         LigneFacture[]
  Paiement             Paiement[]
}

model Paiement {
  id               Int          @id @default(autoincrement())
  date_paiement    DateTime
  montant_paye     Decimal      @db.Decimal(15, 2)
  id_mode_paiement Int
  id_utilisateur   Int
  id_facture       Int
  facture          Facture      @relation(fields: [id_facture], references: [id], onDelete: Cascade)
  modePaiement     ModePaiement @relation(fields: [id_mode_paiement], references: [id], onDelete: Cascade)
  utilisateur      Utilisateur  @relation(fields: [id_utilisateur], references: [id], onDelete: Cascade)
  
}

model LigneFacture {
  id            Int     @id @default(autoincrement())
  nom           String  @db.VarChar(50)
  quantite      Int
  prix_unitaire Decimal @db.Decimal(15, 2)
  montant_ligne Decimal @db.Decimal(15, 2)
  id_facture    Int
  facture       Facture @relation(fields: [id_facture], references: [id], onDelete: Cascade)
}
